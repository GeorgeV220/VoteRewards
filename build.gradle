buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.0'
    id 'io.freefair.lombok' version '6.6.3'
    id 'java'
    id 'jacoco'
    id 'idea'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

javadoc {
    options.encoding = 'UTF-8'
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.georgev22.com/releases' }
    maven { url 'https://repo.georgev22.com/snapshots' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://jcenter.bintray.com/" }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.dmulloy2.net/repository/public/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:${mcVersion}-R0.1-SNAPSHOT"

    implementation "io.papermc:paperlib:${paperlibVersion}"

    implementation "org.bstats:bstats-bukkit:${bstatsVersion}"
    implementation "co.aikar:acf-paper:${acfVersion}"

    implementation "com.georgev22.library:database:${libraryVersion}"
    implementation "com.georgev22.library:maps:${libraryVersion}"
    implementation "com.georgev22.library:scheduler:${libraryVersion}"
    implementation "com.georgev22.library:utilities:${libraryVersion}"
    implementation "com.georgev22.library:yaml:${libraryVersion}"
    implementation "com.georgev22.library:minecraft:${libraryVersion}"

    implementation "com.google.code.gson:gson:${gsonVersion}"

    implementation "com.georgev22.api:libraryloader:${libraryLoaderVersion}"

    implementation "de.tr7zw:item-nbt-api:${nbtAPIVersion}"

    implementation("com.github.cryptomorin:XSeries:${xSeriesVersion}") {
        setTransitive(false)
    }

    implementation "com.esotericsoftware:kryo:${kryoVersion}"

    implementation 'com.github.juliarn:npc-lib:2.6-RELEASE'
    implementation 'com.github.GeorgeV220:Hologram-Lib:1.3.0-G'
    implementation 'org.codemc.worldguardwrapper:worldguardwrapper:1.2.0-SNAPSHOT'

    compileOnly 'me.clip:placeholderapi:2.11.2'
    compileOnly 'fr.xephi:authme:5.6.0-SNAPSHOT'
    compileOnly 'com.github.NuVotifier.NuVotifier:nuvotifier-api:2.7.2'
    compileOnly 'com.github.NuVotifier.NuVotifier:nuvotifier-bukkit:2.7.2'
    compileOnly 'com.gmail.filoghost.holographicdisplays:holographicdisplays-api:2.4.9'
    compileOnly 'commons-io:commons-io:2.11.0'
    compileOnly 'commons-lang:commons-lang:2.6'
    compileOnly 'com.google.guava:guava:31.1-jre'
    compileOnly 'org.mongodb:mongo-java-driver:3.12.12'
    compileOnly "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"
}

shadowJar {
    archiveClassifier.set('')
    relocate 'com.google.gson', "${packageName}.gson"
    relocate 'io.papermc.lib', "${packageName}.paperlib"
    relocate 'co.aikar.commands', "${packageName}.commands.acf"
    relocate 'co.aikar.locales', "${packageName}.commands.acf.locales"
    relocate 'org.bstats', "${packageName}.bstats"
    relocate 'com.georgev22.api.libraryloader', "${packageName}.libraryloader"
    relocate 'com.georgev22.library', "${packageName}.library"
    relocate 'de.tr7zw.changeme.nbtapi', "${packageName}.nbtapi"
    relocate 'de.tr7zw.annotations', "${packageName}.nbtapi.annotations"
    relocate 'com.cryptomorin.xseries', "${packageName}.xseries"
    relocate 'com.georgev22.particle', "${packageName}.particle"
    relocate 'org.yaml.snakeyaml', "${packageName}.snakeyaml"
    relocate 'com.esotericsoftware', "${packageName}.kryo"
    relocate 'org.objenesis', "${packageName}.objenesis"
    relocate 'com.github.juliarn.npc', "${packageName}.api.npc"
    relocate 'com.github.juliarn.relocation', "${packageName}.api.npc.gson"
    relocate 'com.github.unldenis.hologram', "${packageName}.api.hologram"
    relocate 'org.codemc.worldguardwrapper', "${packageName}.api.worldguardwrapper"
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand project.properties
    }
}

defaultTasks 'clean build'
